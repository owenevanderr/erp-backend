generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STAFF
  OWNER
}

enum WorkOrderStatus {
  PLANNED
  IN_PROGRESS
  COMPLETED
}

enum AttendanceStatus {
  PRESENT
  ABSENT
}

enum TransactionType {
  CASH_IN
  CASH_OUT
}

model User {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  password String
  role     Role   @default(STAFF)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Supplier {
  id       String @id @default(cuid())
  name     String
  contact  String?
  address  String?
  products Product[]
  transactions Transaction[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id               String  @id @default(cuid())
  name             String
  sku              String  @unique
  stock            Int     @default(0)
  unit             String
  lowStockThreshold Int    @default(0)
  supplierId       String?
  supplier         Supplier? @relation(fields: [supplierId], references: [id])
  workOrders       WorkOrder[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WorkOrder {
  id                 String @id @default(cuid())
  productId          String
  product            Product @relation(fields: [productId], references: [id])
  quantity           Int
  dueDate            DateTime
  status             WorkOrderStatus @default(PLANNED)
  assignedEmployeeId String?
  assignedEmployee   Employee? @relation(fields: [assignedEmployeeId], references: [id])
  notes              String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id       String @id @default(cuid())
  name     String
  email    String? @unique
  phone    String?
  address  String?
  transactions Transaction[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id          String @id @default(cuid())
  type        TransactionType
  amount      Decimal @db.Decimal(12,2)
  description String?
  date        DateTime @default(now())
  customerId  String?
  customer    Customer? @relation(fields: [customerId], references: [id])
  supplierId  String?
  supplier    Supplier? @relation(fields: [supplierId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  id         String @id @default(cuid())
  name       String
  position   String
  salary     Decimal @db.Decimal(12,2) 
  workOrders WorkOrder[]
  attendance Attendance[]
  payrolls   Payroll[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Attendance {
  id         String @id @default(cuid())
  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
  date       DateTime
  status     AttendanceStatus
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([employeeId, date])
}

model Payroll {
  id         String @id @default(cuid())
  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
  baseSalary Decimal @db.Decimal(12,2)
  deductions Decimal @db.Decimal(12,2) @default(0)
  netSalary  Decimal @db.Decimal(12,2)
  month      Int
  year       Int
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
  @@unique([employeeId, month, year])
}
